"use strict";

var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  var React = _interopRequireWildcard(require("react"));

  var ReactDOM = _interopRequireWildcard(require("react-dom"));

  var _api = require("./api");

  var _s = $RefreshSig$(),
      _jsxFileName = "/Users/williamclark/dev/turnip-bot/client/index.tsx";

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function App(props) {
    _s();

    React.useEffect(() => {
      async function fetchUserWeeks() {
        let weeks = await (0, _api.getWeeksForUser)(1);
        console.log('WEEKS', weeks);
      }

      fetchUserWeeks();
    }, []);
  }

  _s(App, "OD7bBpZva5O2jO+Puf00hKivP7c=");

  _c = App;
  let root = document.getElementById('root');
  ReactDOM.render( /*#__PURE__*/React.createElement("div", {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 17
    }
  }, "Hello!"), root);

  var _c;

  $RefreshReg$(_c, "App");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}